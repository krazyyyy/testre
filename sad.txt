version: '3.9'

services:
  app:
    container_name: 'ScrapingApp-engine'
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./ScrapingApp:/ScrapingApp
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

    # env_file:
    #   - /ScrapingApp/env.dev
    environment:
      - DB_HOST=db
      - DB_NAME=scraping_data
      - DB_USER=scraping_user
      - DB_PASS=scraping_password
    depends_on:
      - db

  db:
    container_name: 'ScrapingApp-engine-db'
    image: postgres:10-alpine
    # env_file:
    #   - /ScrapingApp/env.dev
    environment:
      - POSTGRES_DB=scraping_data
      - POSTGRES_USER=scraping_user
      - POSTGRES_PASSWORD=scraping_password
    volumes: 
      # - pgdata:/var/lib/postgresql/data
      - ./data/db:/var/lib/postgresql/data
  redis:
    container_name: 'Scraping-App-Redis'
    image: redis:alpine
  celery:
    container_name: 'Scraping-App-Celery'
    restart: always
    build:
      context: .
    command: celery -A ScrapingApp worker --loglevel=info
    volumes:
      - ./ScrapingApp:/ScrapingApp
    env_file:
      - /ScrapingApp/env.dev
    depends_on:
      - db
      - redis
      - app
volumes:
  pgdata: